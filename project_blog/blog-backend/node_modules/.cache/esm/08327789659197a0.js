let Router,postsCtrl,checkLoggedIn;_659‍.x([["default",()=>_659‍.o]]);_659‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_659‍.w("./posts.ctrl",[["*",null,function(v){postsCtrl=v}]]);_659‍.w("../../lib/checkLoggedIn",[["default",["checkLoggedIn"],function(v){checkLoggedIn=v}]]);



const posts = new Router();

posts.get('/', postsCtrl.list);
posts.post('/', checkLoggedIn, postsCtrl.write);

posts.get('/:id', postsCtrl.checkObjectId, postsCtrl.read);
posts.delete('/:id', checkLoggedIn, postsCtrl.checkObjectId, postsCtrl.remove);
posts.patch('/:id', checkLoggedIn, postsCtrl.checkObjectId, postsCtrl.update);

/* 함수
const printInfo = (ctx) => {
  ctx.body = {
    method: ctx.method,
    path: ctx.path,
    params: ctx.params,
  };
};
*/
_659‍.d(posts);
